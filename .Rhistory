library(rgdal) #read in general GIS package
library(stringr) #read in string manipulation package
#ownership registrations
owners <- read.csv("owners.csv")
#building data
bldgs <- read.csv("bldg.csv")
org_agg$CorporationName<- gsub("[^[:alnum:][:blank:]]", "", org_agg$CorporationName)
org_agg <- org_agg[org_agg$CorporationName !="" ,]
head(org_agg)
nrow(org_agg[org_agg$Building_Count > 2 ,])
owners$RealID <- paste(owners$BusinessHouseNumber, owners$BusinessStreetName, sep=" ")
real_agg <- aggregate(RegistrationID ~ RealID, data=owners, FUN=length)
names(real_agg) <- c("RealID", "Building_Count")
nrow(real_agg[real_agg$Building_Count > 2 ,])
owners <- merge(x=owners, y=real_agg, by="RealID")
View(owners)
summary(owners$Type)
just_owners <- names(summary(owners$Type))[c(2, 4, 5, 8)]
owners <- owners[owners$Type %in% just_owners ,]
owners <- owners[! duplicated(owners$RegistrationID) ,]
real_agg <- aggregate(RegistrationID ~ RealID, data=owners, FUN=length)
names(real_agg) <- c("RealID", "Building_Count")
nrow(real_agg[real_agg$Building_Count > 2 ,])
owners <- read.csv("owners.csv")
owners <- owners[! duplicated(owners$RegistrationID) ,]
owners <- merge(x=owners, y=real_agg, by="RealID")
owners$RealID <- paste(owners$BusinessHouseNumber, owners$BusinessStreetName, sep=" ")
real_agg <- aggregate(RegistrationID ~ RealID, data=owners, FUN=length)
names(real_agg) <- c("RealID", "Building_Count")
nrow(real_agg[real_agg$Building_Count > 2 ,])
View(real_agg)
owners <- merge(x=owners, y=real_agg, by="RealID")
combo <- merge(x=bldgs, y=owners, by="RegistrationID", all.x=TRUE)
View(combo)
owners <- read.csv("owners.csv")
owners[owners$RegistrationID == 10063 ,]
owners[owners$RegistrationID == 10024 ,]
len(unique(owners$RegistrationID))
nrow(unique(owners$RegistrationID))
length(unique(owners$RegistrationID))
owners$RealID <- paste(owners$BusinessHouseNumber, owners$BusinessStreetName, sep=" ")
real_agg <- aggregate(RegistrationID ~ RealID, data=owners, FUN=length)
names(real_agg) <- c("RealID", "Building_Count")
nrow(real_agg[real_agg$Building_Count > 2 ,])
summary(owners$Type)
owners <- owners[! duplicated(owners$RegistrationID) ,]
real_agg <- aggregate(RegistrationID ~ RealID, data=owners, FUN=length)
names(real_agg) <- c("RealID", "Building_Count")
nrow(real_agg[real_agg$Building_Count > 2 ,])
#merge building count with owner DF
owners <- merge(x=owners, y=real_agg, by="RealID")
head(bldgs)
combo <- merge(x=bldgs, y=owners, by="RegistrationID")
bldg_counts <- merge(x=bldgs, y=owners, by="RegistrationID")
bldg_counts <- bldg_counts[! is.na(bldg_counts$Building_Count) ,]
View(bldg_counts)
head(bldg_counts)
head(bldg_counts)
pluto_bk <- read.csv("BK.csv")
pluto_bk <- read.csv("pluto.csv")
names(pluto_bk)
names(pluto_bk)
pluto_bk <- pluto_bk[, c(4, 5, 6, 58,71, 73, 74, 75)]
names(pluto_bk)
names(pluto_bk)
bldgs <- bldgs[bldgs$BoroID == 3 ,]
bldgs["New_Block"] <- lapply(bldgs["Block"], function(x) sprintf("%05d", x))
#repeat for lots
bldgs["New_Lot"] <- lapply(bldgs["Lot"], function(x) sprintf("%04d", x))
bldgs["BBL"] <- as.numeric(paste(bldgs$BoroID, bldgs$New_Block, bldgs$New_Lot, sep=""))
head(bldgs)
names(pluto_bk)
head(pluto_bk)
pluto_bk <- pluto_bk[, c(5, 2)]
combo <- merge(x=combo, y=pluto_bk, by="BBL")
combo  <- combo [combo $BoroID == 3 ,]
combo ["New_Block"] <- lapply(combo ["Block"], function(x) sprintf("%05d", x))
combo ["New_Lot"] <- lapply(combo ["Lot"], function(x) sprintf("%04d", x))
combo ["BBL"] <- as.numeric(paste(combo $BoroID, combo $New_Block, combo $New_Lot, sep=""))
combo <- merge(x=combo, y=pluto_bk, by="BBL")
View(combo)
names(pluto_bk)
pluto_bk <- pluto_bk[, c(5, 2)]
combo <- merge(x=combo, y=pluto_bk, by="BBL")
pluto_bk <- merge(x=pluto_bk, y=combo, by.x="BBL", by.y="BBL")
names(pluto_bk)
pluto_bk <- pluto_bk[, c(5, 2)]
combo <- merge(x=combo, y=pluto_bk, by="BBL")
pluto_bk <- merge(x=pluto_bk, y=combo, by.x="BBL", by.y="BBL")
names(combo)
bldg_counts  <- bldg_counts [bldg_counts $BoroID == 3 ,]
#create new columns with padded values
bldg_counts ["New_Block"] <- lapply(bldg_counts ["Block"], function(x) sprintf("%05d", x))
bldg_counts ["New_Lot"] <- lapply(bldg_counts ["Lot"], function(x) sprintf("%04d", x))
#use paste function to combine everything into one variable
bldg_counts ["BBL"] <- as.numeric(paste(bldg_counts $BoroID, bldg_counts $New_Block, bldg_counts $New_Lot, sep=""))
head(bldg_counts)
head(bldg_counts$BBL)
head(bldg_counts$BBL, n=15)
names(pluto_bk)
pluto_bk <- pluto_bk[, c(5, 2)]
pluto_bk <- merge(x=pluto_bk, y=bldg_counts, by.x="BBL", by.y="BBL")
#turn off scientific notation
options(scipen=999)
pluto_bk <- merge(x=pluto_bk, y=bldg_counts, by="BBL")
head(pluto_bk)
bldg_counts <- merge(x=bldgs, y=owners, by="RegistrationID")
bldg_counts <- bldg_counts[! is.na(bldg_counts$Building_Count) ,]
pluto_bk <- read.csv("pluto.csv")
names(pluto_bk)
pluto_bk <- pluto_bk[, c(4, 5, 6, 58,71, 73, 74, 75)]
names(pluto_bk)
#subset dataframe for just Brooklyn
bldg_counts  <- bldg_counts [bldg_counts $BoroID == 3 ,]
#create new columns with padded values
bldg_counts ["New_Block"] <- lapply(bldg_counts ["Block"], function(x) sprintf("%05d", x))
bldg_counts ["New_Lot"] <- lapply(bldg_counts ["Lot"], function(x) sprintf("%04d", x))
#use paste function to combine everything into one variable
bldg_counts ["BBL"] <- as.numeric(paste(bldg_counts $BoroID, bldg_counts $New_Block, bldg_counts $New_Lot, sep=""))
names(pluto_bk)
pluto_bk <- pluto_bk[, c(5, 2)]
pluto_bk <- merge(x=pluto_bk, y=bldg_counts, by="BBL")
bldg_counts <- merge(x=bldg_counts, y=pluto_bk, by="BBL")
bldg_counts <- merge(x=bldgs, y=owners, by="RegistrationID")
bldg_counts <- bldg_counts[! is.na(bldg_counts$Building_Count) ,]
bldg_counts  <- bldg_counts [bldg_counts $BoroID == 3 ,]
#create new columns with padded values
bldg_counts ["New_Block"] <- lapply(bldg_counts ["Block"], function(x) sprintf("%05d", x))
bldg_counts ["New_Lot"] <- lapply(bldg_counts ["Lot"], function(x) sprintf("%04d", x))
#use paste function to combine everything into one variable
bldg_counts ["BBL"] <- as.numeric(paste(bldg_counts $BoroID, bldg_counts $New_Block, bldg_counts $New_Lot, sep=""))
bldg_counts <- merge(x=bldg_counts, y=pluto_bk, by="BBL")
bldg_counts <- merge(x=bldgs, y=owners, by="RegistrationID")
bldg_counts <- bldg_counts[! is.na(bldg_counts$Building_Count) ,]
bldg_counts  <- bldg_counts [bldg_counts $BoroID == 3 ,]
#create new columns with padded values
bldg_counts ["New_Block"] <- lapply(bldg_counts ["Block"], function(x) sprintf("%05d", x))
bldg_counts ["New_Lot"] <- lapply(bldg_counts ["Lot"], function(x) sprintf("%04d", x))
#use paste function to combine everything into one variable
bldg_counts ["BBL"] <- as.numeric(paste(bldg_counts $BoroID, bldg_counts $New_Block, bldg_counts $New_Lot, sep=""))
bldg_counts1 <- merge(x=bldg_counts, y=pluto_bk, by="BBL", all.x=TRUE)
View(bldg_counts)
View(bldg_counts1)
len(unique(bldg_counts$BBL))
length(unique(bldg_counts$BBL))
View(bldg_counts)
bldg_counts[duplicated(bldg_counts$BBL) ,]
dupes = bldg_counts[duplicated(bldg_counts$BBL) ,]
View(dupes)
pluto_bk1 <- pluto_bk[! duplicated(pluto_bk$BBL) ,]
bldg_counts1 <- merge(x=bldg_counts, y=pluto_bk, by="BBL")
1
names(pluto_bk)
pluto_bk <- pluto_bk[, c(5, 2)]
bldg_counts1 <- merge(x=bldg_counts, y=pluto_bk1, by="BBL")
nrow(bldg_counts)
nrow(bldg_counts1)
pluto_bk <- read.csv("pluto.csv")
pluto_bk <- pluto_bk[, c(4, 5, 6, 58,71, 73, 74, 75)]
pluto_bk <- pluto_bk[, c(5, 2)]
bldg_counts1 <- merge(x=bldg_counts, y=pluto_bk1, by="BBL")
nrow(bldg_counts)
nrow(bldg_counts1)
names(pluto_bk)
pluto_bk <- pluto_bk[, c(5, 2)]
bldg_counts1 <- merge(x=bldg_counts, y=pluto_bk, by="BBL")
nrow(bldg_counts)
nrow(bldg_counts1)
bldg_counts <- merge(x=bldgs, y=owners, by="RegistrationID")
bldg_counts <- bldg_counts[! is.na(bldg_counts$Building_Count) ,]
bldg_counts  <- bldg_counts [bldg_counts $BoroID == 3 ,]
#create new columns with padded values
bldg_counts ["New_Block"] <- lapply(bldg_counts ["Block"], function(x) sprintf("%05d", x))
bldg_counts ["New_Lot"] <- lapply(bldg_counts ["Lot"], function(x) sprintf("%04d", x))
#use paste function to combine everything into one variable
bldg_counts ["BBL"] <- as.numeric(paste(bldg_counts $BoroID, bldg_counts $New_Block, bldg_counts $New_Lot, sep=""))
bldg_counts1 <- merge(x=bldg_counts, y=pluto_bk, by="BBL")
nrow(bldg_counts)
nrow(bldg_counts1)
pluto_bk <- read.csv("pluto.csv")
names(pluto_bk)
pluto_bk <- pluto_bk[, c(4, 5, 6, 58,71, 73, 74, 75)]
names(pluto_bk)
#subset dataframe for just Brooklyn
bldg_counts  <- bldg_counts [bldg_counts $BoroID == 3 ,]
#create new columns with padded values
bldg_counts ["New_Block"] <- lapply(bldg_counts ["Block"], function(x) sprintf("%05d", x))
bldg_counts ["New_Lot"] <- lapply(bldg_counts ["Lot"], function(x) sprintf("%04d", x))
#use paste function to combine everything into one variable
bldg_counts ["BBL"] <- as.numeric(paste(bldg_counts $BoroID, bldg_counts $New_Block, bldg_counts $New_Lot, sep=""))
pluto_bk <- pluto_bk[, c(5, 2)]
bldg_counts1 <- merge(x=bldg_counts, y=pluto_bk, by="BBL")
bldg_counts2 <- merge(x=bldg_counts, y=pluto_bk, by="BBL")
View(bldg_counts)
pluto_bk <- read.csv("pluto.csv")
names(pluto_bk)
pluto_bk <- pluto_bk[, c(4, 5, 6, 58,71, 73, 74, 75)]
names(pluto_bk)
names(pluto_bk)
pluto_bk <- pluto_bk[, c(5, 2)]
names(pluto_bk)
bldg_counts2 <- merge(x=bldg_counts, y=pluto_bk, by="BBL")
View(bldg_counts2)
pluto_bk1<- pluto_bk[! duplicated(pluto_bk$BBL) ,]
bldg_counts2 <- merge(x=bldg_counts, y=pluto_bk1, by="BBL")
bldg_counts2 <- merge(x=bldg_counts, y=pluto_bk1, by="BBL", all.x=TRUE)
bldg_counts2 <- merge(x=bldg_counts, y=pluto_bk, by="BBL", all.x=TRUE)
bldg_counts <- merge(x=bldgs, y=owners, by="RegistrationID")
bldg_counts <- bldg_counts[! is.na(bldg_counts$Building_Count) ,]
head(bldg_counts)
pluto_bk <- read.csv("pluto.csv")
names(pluto_bk)
pluto_bk <- pluto_bk[, c(4, 5, 6, 58,71, 73, 74, 75)]
names(pluto_bk)
#subset dataframe for just Brooklyn
bldg_counts  <- bldg_counts [bldg_counts $BoroID == 3 ,]
#create new columns with padded values
bldg_counts ["New_Block"] <- lapply(bldg_counts ["Block"], function(x) sprintf("%05d", x))
bldg_counts ["New_Lot"] <- lapply(bldg_counts ["Lot"], function(x) sprintf("%04d", x))
#use paste function to combine everything into one variable
bldg_counts ["BBL"] <- as.numeric(paste(bldg_counts $BoroID, bldg_counts $New_Block, bldg_counts $New_Lot, sep=""))
head(bldg_counts$BBL, n=15)
names(pluto_bk)
pluto_bk <- pluto_bk[, c(5, 2)]
nrow(bldg_counts)
bldg_counts <- merge(x=bldg_counts, y=pluto_bk1, by="BBL")
nrow(bldg_counts)
over_one <- bldg_counts[bldg_counts$Building_Count > 2 ,]
tract_counts <- aggregate(Building_Count ~ CT2010, data=over_one, FUN=length )
View(tract_counts)
over_one <- bldg_counts[bldg_counts$Building_Count > 2 ,]
tract_counts <- aggregate(Building_Count ~ CT2010, data=over_one, FUN=length )
nrow(tract_counts)
length(unique(pluto_bk$CT2010))
over_one <- bldg_counts[bldg_counts$Building_Count > 2 ,]
tract_counts <- aggregate(Building_Count ~ CT2010, data=over_one, FUN=length )
nrow(tract_counts)
length(unique(pluto_bk$CT2010))
temp_shape <- readOGR(dsn = "gis", layer = "tl_2010_36047_tract10")
temp_df <- temp_shape@data
temp_shape <- readOGR(dsn = "gis", layer = "tl_2010_36047_tract10")
temp_shape <- readOGR(dsn = "shapefiles", layer = "tl_2010_36047_tract10")
library(cartography) #read in map-making package
library(rgdal) #read in general GIS package
library(stringr) #read in string manipulation package
temp_shape <- readOGR(dsn = "shapefiles", layer = "tl_2010_36047_tract10")
temp_shape <- readOGR(dsn = "shapefiles", layer = "tl_2010_36047_tract10")
temp_df <- temp_shape@data
names(temp_df)
temp_df <- temp_df[, c(3, 5)]
write.csv("xref_tracts.csv")
write.csv(temp_df, "xref_tracts.csv")
xref <- read.csv("xref_tracts.csv")
View(xref)
View(tract_counts)
tract_counts <- merge(x=tract_counts, y=xref, by.x="CT2010", by.y="TRACTCE10")
tract_counts <- tract_counts[, c(1, 2, 3)]
tract_counts <- merge(x=tract_counts, y=xref, by.x="CT2010", by.y="TRACTCE10")
tract_counts <- aggregate(Building_Count ~ CT2010, data=over_one, FUN=length )
nrow(tract_counts)
length(unique(pluto_bk$CT2010))
tract_counts <- merge(x=tract_counts, y=xref, by.x="CT2010", by.y="TRACTCE10")
tract_counts <- tract_counts[, c(1, 2, 4)]
tract_counts <- aggregate(Building_Count ~ CT2010, data=over_one, FUN=length )
nrow(tract_counts)
length(unique(pluto_bk$CT2010))
xref <- read.csv("xref_tracts.csv")
tract_counts <- merge(x=tract_counts, y=xref, by.x="CT2010", by.y="TRACTCE10")
tract_counts <- tract_counts[, c(1, 2, 4)]
head(tract_counts)
xref <- read.csv("data/xref_tracts.csv")
tract_counts <- merge(x=tract_counts, y=xref, by.x="CT2010", by.y="TRACTCE10")
tract_counts <- tract_counts[, c(1, 2, 4)]
head(tract_counts)
tract_counts <- aggregate(Building_Count ~ CT2010, data=over_one, FUN=length )
nrow(tract_counts)
length(unique(pluto_bk$CT2010))
xref <- read.csv("data/xref_tracts.csv")
tract_counts <- merge(x=tract_counts, y=xref, by.x="CT2010", by.y="TRACTCE10")
head(tract_counts)
xref$X <- NULL
xref <- read.csv("data/xref_tracts.csv")
xref$X <- NULL
tract_counts <- merge(x=tract_counts, y=xref, by.x="CT2010", by.y="TRACTCE10")
head(tract_counts)
tract_counts <- aggregate(Building_Count ~ CT2010, data=over_one, FUN=length )
xref <- read.csv("data/xref_tracts.csv")
xref$X <- NULL
tract_counts <- merge(x=tract_counts, y=xref, by.x="CT2010", by.y="TRACTCE10")
head(tract_counts)
bk_shape <- readOGR(dsn = "shapefiles", layer = "nyct2010")
head(bk_shape@data)
bk_shape <- bk_shape[bk_shape@data$BoroCode == "3" ,]
head(bk_shape@data)
length(bk_shape@data)
nrow(bk_shape@data)
View(xref)
names(tract_counts)[3] <- "CTLabel"
bk_shape <- merge(bk_shape, tract_counts, by="CTLabel")
head(bk_shape@data)
bk_shape@data$CTLabel <- as.integer(bk_shape@data$CTLabel)
require(sp)
bk_shape <- merge(bk_shape, tract_counts, by="CTLabel")
head(bk_shape@data)
bk_shape@data$CTLabel <- as.numeric(bk_shape@data$CTLabel)
bk_shape <- readOGR(dsn = "shapefiles", layer = "nyct2010")
bk_shape <- bk_shape[bk_shape@data$BoroCode == "3" ,]
names(tract_counts)[3] <- "CTLabel"
bk_shape@data$CTLabel <- as.numeric(bk_shape@data$CTLabel)
require(sp)
bk_shape <- merge(bk_shape, tract_counts, by="CTLabel")
head(bk_shape@data)
names(tract_counts)[1] <- "CTLabel"
bk_shape <- merge(bk_shape, tract_counts, by="CTLabel")
tract_counts <- merge(x=tract_counts, y=xref, by.x="CT2010", by.y="TRACTCE10")
tract_counts <- aggregate(Building_Count ~ CT2010, data=over_one, FUN=length )
nrow(tract_counts)
length(unique(pluto_bk$CT2010))
xref <- read.csv("data/xref_tracts.csv")
xref$X <- NULL
tract_counts <- merge(x=tract_counts, y=xref, by.x="CT2010", by.y="TRACTCE10")
head(tract_counts)
names(tract_counts)[1] <- "CTLabel"
bk_shape <- merge(bk_shape, tract_counts, by="CTLabel")
head(bk_shape@data)
tract_counts <- aggregate(Building_Count ~ CT2010, data=over_one, FUN=length )
nrow(tract_counts)
length(unique(pluto_bk$CT2010))
xref <- read.csv("data/xref_tracts.csv")
xref$X <- NULL
tract_counts <- merge(x=tract_counts, y=xref, by.x="CT2010", by.y="TRACTCE10")
head(tract_counts)
bk_shape <- readOGR(dsn = "shapefiles", layer = "nyct2010")
head(bk_shape@data)
#remember "3" is the BoroCode for Brooklyn
bk_shape <- bk_shape[bk_shape@data$BoroCode == "3" ,]
require(sp)
#merge SPDF with tract counts DF
bk_shape <- merge(bk_shape, tract_counts, by="CT2010")
head(bk_shape@data)
xref <- read.csv("data/xref_tracts.csv")
temp_df <- temp_shape@data
names(temp_df)
head(temp_df)
tract_counts <- aggregate(Building_Count ~ CT2010, data=over_one, FUN=length )
names(tract_counts)[1] <- "NAME10"
nrow(tract_counts)
length(unique(pluto_bk$CT2010))
xref <- read.csv("data/xref_tracts.csv")
xref$X <- NULL
tract_counts <- merge(x=tract_counts, y=xref, by="NAME10")
names(tract_counts)[3] <- "CT2010"
head(tract_counts)
bk_shape <- readOGR(dsn = "shapefiles", layer = "nyct2010")
bk_shape <- bk_shape[bk_shape@data$BoroCode == "3" ,]
require(sp)
#merge SPDF with tract counts DF
bk_shape <- merge(bk_shape, tract_counts, by="CT2010")
head(bk_shape@data)
names(temp_df)
head(temp_df)
bk_shape <- readOGR(dsn = "shapefiles", layer = "tl_2010_36047_tract10")
bk_shape <- bk_shape[bk_shape@data$BoroCode == "3" ,]
bk_shape <- merge(bk_shape, tract_counts, by="CT2010")
bk_shape <- merge(bk_shape, tract_counts, by="NAME10")
bk_shape <- readOGR(dsn = "shapefiles", layer = "tl_2010_36047_tract10")
bk_shape <- merge(bk_shape, tract_counts, by="NAME10")
head(bk_shape@data)
plot(bk_shape, border = NA, col = NA, bg = "#A6CAE0")
plot(bk_shape, col  = "#E3DEBF", border=NA, add=TRUE)
bk_shape <- readOGR(dsn = "shapefiles", layer = "nyct2010")
bk_shape <- readOGR(dsn = "shapefiles", layer = "tl_2010_36047_tract10")
bk_shape1 <- readOGR(dsn = "shapefiles", layer = "nyct2010")
1
head(bk_shape1@data)
head(bk_shape@data)
bk_df <- bk_shape@data
write.csv(bk_df, "new_xref.csv")
tract_counts <- aggregate(Building_Count ~ CT2010, data=over_one, FUN=length )
View(tract_counts)
bk_shape1 <- bk_shape1[bk_shape1@data$BoroCode == "3" ,]
head(bk_shape1@data)
names(tract_counts)[1] <- "CTLabel"
bk_shape <- merge(bk_shape, tract_counts, by="CTLabel")
bk_shape <- merge(bk_shape1, tract_counts, by="CTLabel")
plot(bk_shape1, border = NA, col = NA, bg = "#A6CAE0")
plot(bk_shape1, col  = "#E3DEBF", border=NA, add=TRUE)
head(bk_shape1@data)
head(bk_shape@data)
over_one <- bldg_counts[bldg_counts$Building_Count > 2 ,]
tract_counts <- aggregate(Building_Count ~ CT2010, data=over_one, FUN=length )
names(tract_counts)[1] <- "NAME10"
nrow(tract_counts)
length(unique(pluto_bk$CT2010))
bk_shape <- readOGR(dsn = "shapefiles", layer = "nyct2010")
bk_shape <- bk_shape[bk_shape@data$BoroCode == "3" ,]
names(tract_counts)[1] <- "CTLabel"
bk_shape <- readOGR(dsn = "shapefiles", layer = "nyct2010")
bk_shape <- bk_shape[bk_shape@data$BoroCode == "3" ,]
names(tract_counts)[1] <- "CTLabel"
head(tract_counts)
require(sp)
bk_shape <- merge(bk_shape, tract_counts, by="CTLabel")
head(bk_shape@data)
plot(bk_shape, border = NA, col = NA, bg = "#A6CAE0")
plot(bk_shape, col  = "#E3DEBF", border=NA, add=TRUE)
plot(bk_shape, col = "grey60",border = "white", lwd=0.4, add=TRUE)
choroLayer(spdf = bk_shape,
df = bk_shape@data,
var = "Building_Count",
breaks = c(0, 10, 30, 50, 70, 90, 110),
col = cols,
border = "grey40",
lwd = 0.5,
legend.pos = "left",
legend.title.txt = "Number of Buildings",
legend.values.rnd = 10,
add = TRUE)
cols <- carto.pal(pal1 = "green.pal" ,n1 = 8)
choroLayer(spdf = bk_shape,
df = bk_shape@data,
var = "Building_Count",
breaks = c(0, 10, 30, 50, 70, 90, 110),
col = cols,
border = "grey40",
lwd = 0.5,
legend.pos = "left",
legend.title.txt = "Number of Buildings",
legend.values.rnd = 10,
add = TRUE)
max(bk_shape@data$Building_Count)
summary(tract_counts)
bk_shape <- merge(bk_shape, tract_counts, by="CTLabel")
head(bk_shape@data)
plot(bk_shape, border = NA, col = NA, bg = "#A6CAE0")
plot(bk_shape, col  = "#E3DEBF", border=NA, add=TRUE)
cols <- carto.pal(pal1 = "green.pal" ,n1 = 8)
choroLayer(spdf = bk_shape,
df = bk_shape@data,
var = "Building_Count",
breaks = c(0, 10, 30, 50, 70, 90, 120, 150),
col = cols,
border = "grey40",
lwd = 0.5,
legend.pos = "left",
legend.title.txt = "Number of Buildings",
legend.values.rnd = 10,
add = TRUE)
plot(bk_shape, border = NA, col = NA, bg = "#A6CAE0")
plot(bk_shape, col  = "#E3DEBF", border=NA, add=TRUE)
cols <- carto.pal(pal1 = "green.pal" ,n1 = 8)
choroLayer(spdf = bk_shape,
df = bk_shape@data,
var = "Building_Count",
breaks = c(0, 10, 30, 50, 70, 90, 120, 150),
col = cols,
border = "grey40",
lwd = 0.5,
legend.pos = "left",
legend.title.txt = "Number of Buildings",
legend.values.rnd = 10,
add = TRUE)
bk_shape <- merge(bk_shape, tract_counts, by="CT2010")
bk_shape <- readOGR(dsn = "shapefiles", layer = "nyct2010")
bk_shape <- bk_shape[bk_shape@data$BoroCode == "3" ,]
names(tract_counts)[1] <- "CT2010"
bk_shape <- merge(bk_shape, tract_counts, by="CT2010")
plot(bk_shape, border = NA, col = NA, bg = "#A6CAE0")
plot(bk_shape, col  = "#E3DEBF", border=NA, add=TRUE)
cols <- carto.pal(pal1 = "green.pal" ,n1 = 8)
choroLayer(spdf = bk_shape,
df = bk_shape@data,
var = "Building_Count",
breaks = c(0, 10, 30, 50, 70, 90, 120, 150),
col = cols,
border = "grey40",
lwd = 0.5,
legend.pos = "left",
legend.title.txt = "Number of Buildings",
legend.values.rnd = 10,
add = TRUE)
head(tract_counts)
head(bk_shape)
head(bk_shape@data)
tract_counts <- aggregate(Building_Count ~ CT2010, data=over_one, FUN=length )
names(tract_counts)[1] <- "CTLabel"
bk_shape <- readOGR(dsn = "shapefiles", layer = "nyct2010")
bk_shape <- bk_shape[bk_shape@data$BoroCode == "3" ,]
head(tract_counts)
bk_shape <- merge(bk_shape, tract_counts, by="CTLabel")
plot(bk_shape, border = NA, col = NA, bg = "#A6CAE0")
plot(bk_shape, col  = "#E3DEBF", border=NA, add=TRUE)
cols <- carto.pal(pal1 = "green.pal" ,n1 = 8)
choroLayer(spdf = bk_shape,
df = bk_shape@data,
var = "Building_Count",
breaks = c(0, 10, 30, 50, 70, 90, 120, 150),
col = cols,
border = "grey40",
lwd = 0.5,
legend.pos = "left",
legend.title.txt = "Number of Buildings",
legend.values.rnd = 10,
add = TRUE)
layoutLayer(title = "Census Tracts by Building Ownership Concentration",
author = "Pres Nichols",
sources = "Source: NYC OpenData",
scale = NULL,
col = NA,
coltitle = "black",
frame = FALSE,
bg = NA)
